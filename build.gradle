
plugins {
    id 'signing'
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.16.0'
}

group = 'dev.pdfapi'
version = '1.0.1'

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'com.squareup.okhttp3:okhttp:4.9.3'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.13'
    testImplementation 'org.apache.httpcomponents:httpmime:4.5.13'
    testImplementation 'org.springframework:spring-web:5.3.13'
    testImplementation 'org.slf4j:slf4j-simple:2.0.9'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    api 'org.slf4j:slf4j-api:2.0.9'

    // HTTP Client implementations - all optional
    compileOnly 'com.squareup.okhttp3:okhttp:4.9.3'
    compileOnly 'org.apache.httpcomponents:httpclient:4.5.13'
    compileOnly 'org.apache.httpcomponents:httpmime:4.5.13'
    compileOnly 'org.springframework:spring-web:5.3.13'
    
    // Runtime dependencies - OkHttp is the default implementation
    runtimeOnly 'com.squareup.okhttp3:okhttp:4.9.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    failOnError = false
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform {
        excludeTags 'integration'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    
    // Only run if PDFAPI_KEY is set
    onlyIf {
        System.getenv('PDFAPI_KEY') != null
    }
}

check.dependsOn integrationTest

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'dev.pdfapi'
            artifactId = 'pdfapi-java-client'

            from components.java

            pom {
                name = 'pdfapi-java-client'
                description = 'Java client library for pdfapi.dev'
                url = 'https://github.com/pdfapi-dev-sdk/pdfapi-java-client'
                inceptionYear = '2025'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://spdx.org/licenses/Apache-2.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'mcharmas'
                        name = 'Michal Charmas'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/pdfapi-dev-sdk/pdfapi-java-client.git'
                    developerConnection = 'scm:git:https://github.com/pdfapi-dev-sdk/pdfapi-java-client.git'
                    url = 'https://github.com/pdfapi-dev-sdk/pdfapi-java-client'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
        
    release {
        github {
            skipRelease = false
        }
    }

    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}

